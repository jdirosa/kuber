import { ApolloServer } from "apollo-server";
import { books, authors } from "./data";
import { typeDefs } from "./schema";
// Resolvers define the technique for fetching the types defined in the
// schema. This resolver retrieves books from the "books" array above.
const resolvers = {
  Query: {
    books: () =>
      books.map(b => {
        return {
          ...{ ...b },
          author: authors.find(a => a.id === b.authorId)
        };
      }),
    authors: () =>
      authors.map(a => {
        return {
          ...{ ...a },
          books: books
            .filter(b => b.authorId === a.id)
            .map(bb => {
              return {
                ...{ ...bb },
                author: a
              };
            })
        };
      })
  }
};

// The ApolloServer constructor requires two parameters: your schema
// definition and your set of resolvers.
const server = new ApolloServer({ typeDefs, resolvers });

// The `listen` method launches a web server.
server.listen().then(({ url }) => {
  console.log(`ğŸš€  Server ready at ${url}`);
});
